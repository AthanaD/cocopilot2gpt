<!doctype html>
<html>
<h1>
    {{ .title }}
</h1>
打开链接 <a href="https://github.com/login/device" target="__blank">https://github.com/login/device</a>
<!-- <button onclick="copyToClipboard()">复制</button> -->
<p>输入：<input type="text" value="{{ .userCode }}" disabled="disabled" id="code" size="10"></p>
<p>获取有延迟，填写完毕请勿刷新页面</p>
<p>ghu: <input type="text" value="获取中" id="ghu" size="50"></p>
<script>
    var deviceCode = "{{ .deviceCode }}"

    let intervalId = null;
    let count = 0;

    // 每5秒执行一次的函数
    function polling() {
        count++;
        console.log('Polling: ' + count);
        var xhr = new XMLHttpRequest();
        xhr.open("POST", "/auth/check", true);
        var formData = new FormData();
        formData.append("deviceCode", deviceCode);

        xhr.onreadystatechange = function () {
            console.log(xhr.responseText);
            if (xhr.status >= 200 && xhr.status < 300) {
                if (xhr.responseText.length > 0) {                    
                    try {
                        var data = JSON.parse(xhr.responseText);
                        // 现在你可以使用解析后的数据了
                        console.log(data);
                        if (data.code == "0") {
                            stopPolling();
                            var inputElement = document.getElementById('ghu');
                            inputElement.value = data.data; // 将值更改为你想要的任何字符串
                        }
                    } catch (e) {
                        console.error("解析JSON数据时出错: ", e);
                    }
                }
            } else {
                console.error("请求失败，HTTP状态码: ", xhr.status);
            }
        };
        xhr.send(formData);
    }

    // 15分钟后停止轮询的函数
    function stopPolling() {
        clearInterval(intervalId);
        console.log('Polling stopped');
    }

    // 开始轮询
    intervalId = setInterval(polling, 6 * 1000); // 5秒

    // 15分钟后停止轮询
    setTimeout(stopPolling, 15 * 60 * 1000); // 15分钟

    function copyToClipboard() {
        let text = document.getElementById('code').innerHTML;
        const copyContent = async () => {
            try {
                await navigator.clipboard.writeText(text);
                console.log('Content copied to clipboard');
            } catch (err) {
                console.error('Failed to copy: ', err);
            }
        }
    }

</script>

</html>